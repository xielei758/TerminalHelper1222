# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_tray_theme_picker.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Theme_Picker(object):
    def setupUi(self, Theme_Picker):
        Theme_Picker.setObjectName("Theme_Picker")
        Theme_Picker.resize(510, 299)
        Theme_Picker.setMinimumSize(QtCore.QSize(510, 299))
        Theme_Picker.setMaximumSize(QtCore.QSize(510, 299))
        self.centralwidget = QtWidgets.QWidget(Theme_Picker)
        self.centralwidget.setStyleSheet("background-color: qlineargradient(y1: 0, y2: 1, stop: 0 rgb(132, 110, 160), stop:1 rgb(55, 80, 110));\n"
"\n"
"color: rgb(255, 255, 255); ")
        self.centralwidget.setObjectName("centralwidget")
        self.TP_stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.TP_stackedWidget.setGeometry(QtCore.QRect(0, 0, 511, 301))
        self.TP_stackedWidget.setStyleSheet("background: transparent; ")
        self.TP_stackedWidget.setObjectName("TP_stackedWidget")
        self.main_page = QtWidgets.QWidget()
        self.main_page.setObjectName("main_page")
        self.tp_header = QtWidgets.QLabel(self.main_page)
        self.tp_header.setGeometry(QtCore.QRect(30, 20, 411, 41))
        font = QtGui.QFont()
        font.setFamily("Noto Mono")
        font.setPointSize(18)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.tp_header.setFont(font)
        self.tp_header.setStyleSheet("font: 18pt \"Noto Mono\";")
        self.tp_header.setObjectName("tp_header")
        self.main_prompt = QtWidgets.QLabel(self.main_page)
        self.main_prompt.setGeometry(QtCore.QRect(30, 110, 101, 41))
        self.main_prompt.setMinimumSize(QtCore.QSize(0, 40))
        self.main_prompt.setStyleSheet("font: 14pt \"Noto Mono\";")
        self.main_prompt.setWordWrap(True)
        self.main_prompt.setObjectName("main_prompt")
        self.information_prompt = QtWidgets.QLabel(self.main_page)
        self.information_prompt.setGeometry(QtCore.QRect(30, 60, 441, 21))
        self.information_prompt.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Noto Mono")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.information_prompt.setFont(font)
        self.information_prompt.setStyleSheet("font: 10pt \"Noto Mono\";\n"
"color: rgba(255, 255, 255, 180);")
        self.information_prompt.setWordWrap(True)
        self.information_prompt.setObjectName("information_prompt")
        self.tp_apply_btn = QtWidgets.QPushButton(self.main_page)
        self.tp_apply_btn.setGeometry(QtCore.QRect(380, 240, 111, 41))
        self.tp_apply_btn.setStyleSheet("QPushButton {\n"
"    background-color: rgb(124,166,82);\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(171,228,113);\n"
"}\n"
"QPushButton:pressed {    \n"
"    background-color: rgb(87,116,57);\n"
"}\n"
"QPushButton {\n"
"    font-size:16pt; color: rgb(255, 255, 255);\n"
"}")
        self.tp_apply_btn.setObjectName("tp_apply_btn")
        self.tp_combo = QtWidgets.QComboBox(self.main_page)
        self.tp_combo.setGeometry(QtCore.QRect(140, 115, 150, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tp_combo.sizePolicy().hasHeightForWidth())
        self.tp_combo.setSizePolicy(sizePolicy)
        self.tp_combo.setMinimumSize(QtCore.QSize(0, 30))
        self.tp_combo.setMaximumSize(QtCore.QSize(150, 16777215))
        self.tp_combo.setStyleSheet("QComboBox {\n"
"    border: 2px solid rgb(185, 179, 255);\n"
"    border-radius: 8px;\n"
"    padding: 1px 18px 1px 3px;\n"
"        color: rgb(51, 51, 51);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: rgb(240, 250, 254);\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"        background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"    /* background: white; */\n"
"    background: rgb(239, 239, 239);\n"
"        color: rgb(147, 123, 171);\n"
"        font-weight: bold;\n"
"        /* color: rgb(255, 255, 255); */\n"
"}\n"
"\n"
"QComboBox:!enabled {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:on { /* shift the text when the popup opens */\n"
"    padding-top: 3px;\n"
"    padding-left: 4px;\n"
"}\n"
"")
        self.tp_combo.setObjectName("tp_combo")
        self.tp_combo.addItem("")
        self.tp_combo.addItem("")
        self.tp_combo.addItem("")
        self.tp_combo.addItem("")
        self.tp_combo.addItem("")
        self.tp_preview_btn = QtWidgets.QPushButton(self.main_page)
        self.tp_preview_btn.setGeometry(QtCore.QRect(250, 240, 111, 41))
        self.tp_preview_btn.setStyleSheet("QPushButton {\n"
"    background-color: rgb(124,166,82);\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(171,228,113);\n"
"}\n"
"QPushButton:pressed {    \n"
"    background-color: rgb(87,116,57);\n"
"}\n"
"QPushButton {\n"
"    font-size:16pt; color: rgb(255, 255, 255);\n"
"}")
        self.tp_preview_btn.setObjectName("tp_preview_btn")
        self.TP_stackedWidget.addWidget(self.main_page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.TP_stackedWidget.addWidget(self.page_2)
        Theme_Picker.setCentralWidget(self.centralwidget)

        self.retranslateUi(Theme_Picker)
        QtCore.QMetaObject.connectSlotsByName(Theme_Picker)

    def retranslateUi(self, Theme_Picker):
        _translate = QtCore.QCoreApplication.translate
        Theme_Picker.setWindowTitle(_translate("Theme_Picker", "MainWindow"))
        self.tp_header.setText(_translate("Theme_Picker", "想换种风格？"))
        self.main_prompt.setText(_translate("Theme_Picker", "应用风格"))
        self.information_prompt.setText(_translate("Theme_Picker", "蓝狐提供了风格切换套件，以适配您的不同心情。"))
        self.tp_apply_btn.setText(_translate("Theme_Picker", "应用"))
        self.tp_combo.setItemText(0, _translate("Theme_Picker", "萤紫幻星"))
        self.tp_combo.setItemText(1, _translate("Theme_Picker", "橙黄橘绿"))
        self.tp_combo.setItemText(2, _translate("Theme_Picker", "烟粉揽月"))
        self.tp_combo.setItemText(3, _translate("Theme_Picker", "湖涧远黛"))
        self.tp_combo.setItemText(4, _translate("Theme_Picker", "火树银花"))
        self.tp_preview_btn.setText(_translate("Theme_Picker", "预览"))
